[{"C:\\project\\robinhood\\src\\index.js":"1","C:\\project\\robinhood\\src\\App.js":"2","C:\\project\\robinhood\\src\\reportWebVitals.js":"3","C:\\project\\robinhood\\src\\Header.js":"4","C:\\project\\robinhood\\src\\Newsfeed.js":"5","C:\\project\\robinhood\\src\\Stats.js":"6","C:\\project\\robinhood\\src\\LineGraph.js":"7","C:\\project\\robinhood\\src\\StatsRow.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":508,"mtime":1615013819957,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":851,"mtime":1615008253666,"results":"13","hashOfConfig":"10"},{"size":668,"mtime":1615181274982,"results":"14","hashOfConfig":"10"},{"size":2362,"mtime":1615330347751,"results":"15","hashOfConfig":"10"},{"size":2495,"mtime":1615182151105,"results":"16","hashOfConfig":"10"},{"size":641,"mtime":1615331058939,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"m37fx9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\project\\robinhood\\src\\index.js",[],["38","39"],"C:\\project\\robinhood\\src\\App.js",["40"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './Header'\nimport Newsfeed from './Newsfeed'\nimport Stats from './Stats'\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/*Header */}\n      <div className='app_header'>\n        <Header />\n      </div>\n      {/*Body */}\n      <div className='app_body'>\n        <div className='app_container'>\n          <Newsfeed />\n          {/*stats */}\n          <Stats />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\project\\robinhood\\src\\reportWebVitals.js",[],"C:\\project\\robinhood\\src\\Header.js",["41","42","43","44","45"],"import React from 'react'\r\nimport Logo from './robinhood.svg'\r\nimport './Header.css'\r\nfunction Header() {\r\n    return (\r\n        <div className='header_wrapper'>\r\n            {/*logo */}\r\n            <div className='header_logo'>\r\n                <img src={Logo} width={25} />\r\n            </div>\r\n            {/*search */}\r\n            <div className='header_search'>\r\n                <div className='header_searchContainer'>\r\n                    <input type='text' placeholder='Search' />\r\n                </div>\r\n            </div>\r\n            {/*menuitems */}\r\n            <div className='header_menuItems'>\r\n                <a href=\"#\">Free stock</a>\r\n                <a href=\"#\">Portfolio</a>\r\n                <a href='#'>Cash</a>\r\n                <a href=\"#\">Account</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\project\\robinhood\\src\\Newsfeed.js",[],"C:\\project\\robinhood\\src\\Stats.js",["46"],"import React, { useState, useEffect } from 'react'\r\nimport './Stats.css'\r\nimport axios from 'axios'\r\nimport StatsRow from './StatsRow'\r\nconst TOKEN = 'c13vjtf48v6s4a2e03kg'\r\nconst BASE_URL = 'https://finnhub.io/api/v1/quote'\r\nfunction Stats() {\r\n    const [stocksData, setStocksData] = useState([])\r\n    useEffect(() => {\r\n        let temStockData = []\r\n        const stocksList = [\"AAPL\", \"MSFT\", \"TSLA\", \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"];\r\n\r\n        let promises = [];\r\n        const getStocksData = (stock) => {\r\n            return axios\r\n                .get(`${BASE_URL}?symbol=${stock}&token=${TOKEN}`)\r\n                .catch((error) => {\r\n                    console.error(\"Error\", error.message)\r\n                })\r\n        }\r\n        stocksList.map((stock) => {\r\n            promises.push(\r\n                getStocksData(stock)\r\n                    .then((res) => {\r\n                        temStockData.push({\r\n                            name: stock,\r\n                            ...res.data\r\n                        });\r\n                    })\r\n            )\r\n        });\r\n\r\n        Promise.all(promises).then(() => {\r\n            console.log(temStockData)\r\n            setStocksData(temStockData);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className='stats' >\r\n            {/*our current stock */}\r\n            <div className='stats_container'>\r\n                <div className='stats_header'>\r\n                    <p>Stocks</p>\r\n                </div>\r\n                <div className='stats_content'>\r\n                    <div className='stats_rows'>\r\n\r\n                    </div>\r\n                </div>\r\n                {/**stock we can buy */}\r\n                <div className='stats_header'>\r\n                    <p>List</p>\r\n                </div>\r\n                <div className='stats_content'>\r\n                    <div className='stats_rows'>\r\n                        {stocksData.map((stock) => (\r\n                            <StatsRow\r\n                                key={stock.name}\r\n                                name={stock.name}\r\n                                openPrice={stock.o}\r\n                                price={stock.c}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ div>\r\n    )\r\n}\r\n\r\nexport default Stats\r\n","C:\\project\\robinhood\\src\\LineGraph.js",[],"C:\\project\\robinhood\\src\\StatsRow.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":9,"column":17,"nodeType":"57","endLine":9,"endColumn":46},{"ruleId":"58","severity":1,"message":"59","line":19,"column":17,"nodeType":"57","endLine":19,"endColumn":29},{"ruleId":"58","severity":1,"message":"59","line":20,"column":17,"nodeType":"57","endLine":20,"endColumn":29},{"ruleId":"58","severity":1,"message":"59","line":21,"column":17,"nodeType":"57","endLine":21,"endColumn":29},{"ruleId":"58","severity":1,"message":"59","line":22,"column":17,"nodeType":"57","endLine":22,"endColumn":29},{"ruleId":"60","severity":1,"message":"61","line":21,"column":32,"nodeType":"62","messageId":"63","endLine":21,"endColumn":34},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]