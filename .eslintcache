[{"C:\\project\\robinhood\\src\\index.js":"1","C:\\project\\robinhood\\src\\App.js":"2","C:\\project\\robinhood\\src\\reportWebVitals.js":"3","C:\\project\\robinhood\\src\\Header.js":"4","C:\\project\\robinhood\\src\\Newsfeed.js":"5","C:\\project\\robinhood\\src\\Stats.js":"6","C:\\project\\robinhood\\src\\LineGraph.js":"7","C:\\project\\robinhood\\src\\StatsRow.js":"8","C:\\project\\robinhood\\src\\firebase.js":"9","C:\\project\\robinhood\\src\\TimeLine.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":508,"mtime":1615013819957,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":851,"mtime":1615008253666,"results":"15","hashOfConfig":"12"},{"size":2489,"mtime":1615873959222,"results":"16","hashOfConfig":"12"},{"size":3638,"mtime":1615699125384,"results":"17","hashOfConfig":"12"},{"size":2495,"mtime":1615182151105,"results":"18","hashOfConfig":"12"},{"size":790,"mtime":1615608897835,"results":"19","hashOfConfig":"12"},{"size":469,"mtime":1615518275136,"results":"20","hashOfConfig":"12"},{"size":710,"mtime":1615699947326,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"m37fx9",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\project\\robinhood\\src\\index.js",[],["47","48"],"C:\\project\\robinhood\\src\\App.js",["49"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './Header'\nimport Newsfeed from './Newsfeed'\nimport Stats from './Stats'\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/*Header */}\n      <div className='app_header'>\n        <Header />\n      </div>\n      {/*Body */}\n      <div className='app_body'>\n        <div className='app_container'>\n          <Newsfeed />\n          {/*stats */}\n          <Stats />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\project\\robinhood\\src\\reportWebVitals.js",[],"C:\\project\\robinhood\\src\\Header.js",["50","51","52","53","54"],"import React from 'react'\r\nimport Logo from './robinhood.svg'\r\nimport './Header.css'\r\nfunction Header() {\r\n    return (\r\n        <div className='header_wrapper'>\r\n            {/*logo */}\r\n            <div className='header_logo'>\r\n                <img src={Logo} width={25} />\r\n            </div>\r\n            {/*search */}\r\n            <div className='header_search'>\r\n                <div className='header_searchContainer'>\r\n                    <input type='text' placeholder='Search' />\r\n                </div>\r\n            </div>\r\n            {/*menuitems */}\r\n            <div className='header_menuItems'>\r\n                <a href=\"#\">Free stock</a>\r\n                <a href=\"#\">Portfolio</a>\r\n                <a href='#'>Cash</a>\r\n                <a href=\"#\">Account</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\project\\robinhood\\src\\Newsfeed.js",["55"],"C:\\project\\robinhood\\src\\Stats.js",["56","57","58"],"import React, { useState, useEffect } from 'react'\r\nimport './Stats.css'\r\nimport axios from 'axios'\r\nimport StatsRow from './StatsRow'\r\nimport { db } from './firebase'\r\nconst TOKEN = 'c13vjtf48v6s4a2e03kg'\r\nconst BASE_URL = 'https://finnhub.io/api/v1/quote'\r\nfunction Stats() {\r\n    const [stocksData, setStocksData] = useState([])\r\n    const [myStocks, setMyStocks] = useState([])\r\n    const getStocksData = (stock) => {\r\n        return axios\r\n            .get(`${BASE_URL}?symbol=${stock}&token=${TOKEN}`)\r\n            .catch((error) => {\r\n                console.error(\"Error\", error.message)\r\n            })\r\n    }\r\n    const getMyStocks = () => {\r\n        db\r\n            .collection('myStocks')\r\n            .onSnapshot(snapshot => {\r\n\r\n                let promises = [];\r\n                let tempData = []\r\n                snapshot.docs.map((doc) => {\r\n\r\n                    promises.push(getStocksData(doc.data().ticker)\r\n                        .then(res => {\r\n                            tempData.push({\r\n                                id: doc.id,\r\n                                data: doc.data(),\r\n                                info: res.data\r\n                            })\r\n                        })\r\n                    )\r\n                })\r\n                Promise.all(promises).then(() => {\r\n                    setMyStocks(tempData);\r\n                })\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        let temStockData = []\r\n        const stocksList = [\"AAPL\", \"MSFT\", \"TSLA\", \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"];\r\n\r\n        let promises = [];\r\n        getMyStocks();\r\n\r\n        stocksList.map((stock) => {\r\n            promises.push(\r\n                getStocksData(stock)\r\n                    .then((res) => {\r\n                        temStockData.push({\r\n                            name: stock,\r\n                            ...res.data\r\n                        });\r\n                    })\r\n            )\r\n        });\r\n\r\n        Promise.all(promises).then(() => {\r\n\r\n            setStocksData(temStockData);\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className='stats' >\r\n            {/*our current stock */}\r\n            <div className='stats_container'>\r\n                <div className='stats_header'>\r\n                    <p>Stocks</p>\r\n                </div>\r\n                <div className='stats_content'>\r\n                    <div className='stats_rows'>\r\n                        {myStocks.map((stock) => (\r\n                            <StatsRow\r\n                                key={stock.data.ticker}\r\n                                name={stock.data.ticker}\r\n                                openPrice={stock.info.o}\r\n                                price={stock.info.c}\r\n                                shares={stock.data.shares}\r\n\r\n                            />\r\n\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                {/**stock we can buy */}\r\n                <div className='stats_header stats__list'>\r\n                    <p>List</p>\r\n                </div>\r\n                <div className='stats_content'>\r\n                    <div className='stats_rows'>\r\n                        {stocksData.map((stock) => (\r\n                            <StatsRow\r\n                                key={stock.name}\r\n                                name={stock.name}\r\n                                openPrice={stock.o}\r\n                                price={stock.c}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ div>\r\n    )\r\n}\r\n\r\nexport default Stats\r\n","C:\\project\\robinhood\\src\\LineGraph.js",[],"C:\\project\\robinhood\\src\\StatsRow.js",["59"],"import React from 'react'\r\nimport './StatsRow.css'\r\nimport StockSVG from './stock.svg'\r\nfunction StatsRow(props) {\r\n    const percentage = ((props.price - props.openPrice) / props.openPrice) * 100\r\n    return (\r\n        <div className=\"row\" >\r\n            <div className=\"row__intro\">\r\n                <h1>{props.name}</h1>\r\n                <p>{props.shares && (props.shares + \" shares\")}</p>\r\n            </div>\r\n            <div className=\"row__chart\">\r\n                <img src={StockSVG} height={16} />\r\n            </div>\r\n            <div className=\"row__numbers\">\r\n                <p className=\"row__price\">${props.price}</p>\r\n                <p className=\"row__percentage\">{Number(percentage).toFixed(2)}%</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsRow","C:\\project\\robinhood\\src\\firebase.js",[],"C:\\project\\robinhood\\src\\TimeLine.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":12},{"ruleId":"68","severity":1,"message":"69","line":9,"column":17,"nodeType":"70","endLine":9,"endColumn":46},{"ruleId":"71","severity":1,"message":"72","line":19,"column":17,"nodeType":"70","endLine":19,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":20,"column":17,"nodeType":"70","endLine":20,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":21,"column":17,"nodeType":"70","endLine":21,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":22,"column":17,"nodeType":"70","endLine":22,"endColumn":29},{"ruleId":"64","severity":1,"message":"73","line":11,"column":27,"nodeType":"66","messageId":"67","endLine":11,"endColumn":43},{"ruleId":"74","severity":1,"message":"75","line":25,"column":41,"nodeType":"76","messageId":"77","endLine":25,"endColumn":43},{"ruleId":"74","severity":1,"message":"75","line":49,"column":32,"nodeType":"76","messageId":"77","endLine":49,"endColumn":34},{"ruleId":"78","severity":1,"message":"79","line":65,"column":8,"nodeType":"80","endLine":65,"endColumn":10,"suggestions":"81"},{"ruleId":"68","severity":1,"message":"69","line":13,"column":17,"nodeType":"70","endLine":13,"endColumn":51},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setpopularTopics' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [getMyStocks]",{"range":"87","text":"88"},[2061,2063],"[getMyStocks]"]